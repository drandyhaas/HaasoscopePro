
## 50MHz FPGA main clock (usually generated by oscillator) - lying and saying it's 32 MHz!
create_clock -name clk50 -period  31.250  [get_ports clk50]

## 12.5MHz LED clock - lying and saying it's 8 MHz so it's in sync with clk50
create_clock -name clk_over_4 -period  125.000  [get_nodes command_processor:inst1|clk_over_4]

## 80MHz lvds clock
create_clock -name lvdsin_clk -period  12.500 [get_ports lvdsin_clk]

## 10MHz external sma clock
create_clock -name clk_ext -period  100.000 [get_ports clk_ext]

## 60MHz FT232H chip clock (generated by FT232H)
create_clock -name ftdi_clk -period  16.666 [get_ports ftdi_clk]

## The clk for adjusting the pll phase
create_clock -name scanclk -period 10.000 [get_nodes command_processor:inst1|scanclk]

## SPI reset "clock"
create_clock -name spireset [get_nodes command_processor:inst1|spireset_L] -period 20.000

# Derive clks
derive_pll_clocks
derive_clock_uncertainty -add

## Declare that these clocks are asynchronous
set_clock_groups -asynchronous -group {clk50 oscpll* clk_ext extpll* pllmain*pll1|clk[*]} -group {lvdsin_clk pllmain*pll1|clk[*]~1} -group {ftdi_clk} -group {scanclk} -group {spireset}

## Ignores
set_false_path -from [get_registers command_processor:inst1|*] -to [get_registers command_processor:inst1|*_sync*]
set_false_path -from [get_registers fpga_top_ft232h_tx_mass*rptr_grey*] -to [get_registers fpga_top_ft232h_tx_mass*rptr_grey*]
set_false_path -from [get_registers fpga_top_ft232h_tx_mass*wptr_grey*] -to [get_registers fpga_top_ft232h_tx_mass*wptr_grey*]

## Slow paths we don't care about
set_false_path -from [get_registers command_processor:inst1|lowerthresh*]
set_false_path -from [get_registers command_processor:inst1|upperthresh*]
set_false_path -from [get_registers command_processor:inst1|lengthtotake*]
set_false_path -from [get_registers command_processor:inst1|prelengthtotake*]
set_false_path -from [get_registers command_processor:inst1|triggertype*]
set_false_path -from [get_registers command_processor:inst1|triggerToT*]
set_false_path -from [get_registers command_processor:inst1|triggerchan*]
set_false_path -from [get_registers command_processor:inst1|dorolling*]
set_false_path -from [get_registers command_processor:inst1|auxoutselector*]
set_false_path -from [get_registers command_processor:inst1|channeltype*]
set_false_path -from [get_registers command_processor:inst1|downsamplemerging*]
set_false_path -from [get_registers command_processor:inst1|highres*]
set_false_path -from [get_registers command_processor:inst1|downsample*]
set_false_path -from [get_registers command_processor:inst1|clkout_ena]

## can ignore
set_false_path -from [get_registers triggerer:inst9|lvdsout_trig] -to [get_registers phase_detector:inst* ]
set_false_path -from [get_registers triggerer:inst9|lvdsout_trig_b] -to [get_registers phase_detector:inst* ]

## IO constraints
set_max_delay -to [get_ports clk*] 10
set_min_delay -to [get_ports clk*] -3
set_max_delay -to [get_ports ftdi_*] 10
set_min_delay -to [get_ports ftdi_*] 0
set_max_delay -from [get_ports ftdi_*] 10
set_min_delay -from [get_ports ftdi_*] 0
set_max_delay -from [get_ports lvds?in*] 5.5
set_min_delay -from [get_ports lvds?in*] 0
set_max_delay -from [get_ports lvdsin_*] 10
set_min_delay -from [get_ports lvdsin_*] 2
set_max_delay -to [get_ports lvdsout*] 10
set_min_delay -to [get_ports lvdsout*] -3
set_max_delay -to [get_ports led* ] 10
set_min_delay -to [get_ports led* ] -10
set_max_delay -from [get_ports reset ] 10
set_min_delay -from [get_ports reset ] -10
set_max_delay -from [get_ports asmi* ] 10
set_min_delay -from [get_ports asmi* ] -10 
set_max_delay -to [get_ports asmi* ] 10
set_min_delay -to [get_ports asmi* ] -10 

set_input_delay -clock ftdi_clk 0 [get_ports ftdi_clk ]
set_input_delay -clock ftdi_clk 0 [get_ports ftdi_rxf_n ]
set_input_delay -clock ftdi_clk 0 [get_ports ftdi_txe_n ]
set_output_delay -clock ftdi_clk 1 [get_ports ftdi_data* ]
set_output_delay -clock ftdi_clk 1 [get_ports ftdi_oe_n ]
set_output_delay -clock ftdi_clk 1 [get_ports ftdi_rd_n ]
set_output_delay -clock ftdi_clk 1 [get_ports ftdi_wr_n ]

set_min_delay -from [get_ports spimiso* ] 0
set_max_delay -from [get_ports spimiso* ] 10
set_min_delay -to [get_ports spiclk ] 0
set_max_delay -to [get_ports spiclk ] 10
set_min_delay -to [get_ports spics* ] 0
set_max_delay -to [get_ports spics* ] 10
set_min_delay -to [get_ports spimosi ] 0
set_max_delay -to [get_ports spimosi ] 10

set_input_delay -clock clk50 0 [get_ports boardin* ]
set_input_delay -clock clk50 0 [get_ports overrange* ]
set_output_delay -clock clk50 0 [get_ports boardout* ]
set_output_delay -clock clk50 0 [get_ports debugout* ]

## for exttrig SMA in and aux SMA out, on clklvds
set_input_delay -clock pllmain|altpll_component|auto_generated|pll1|clk[1] -1 [get_ports exttrigin ]
set_output_delay -clock pllmain|altpll_component|auto_generated|pll1|clk[1] -2 [get_ports auxout ]

## for flash I/O
set_input_delay -clock clk_over_4 -5 [get_ports asmi*DATA0 ]
set_output_delay -clock clk_over_4 -5 [get_ports {asmi*DCLK asmi*SCE asmi*SDO} ]
